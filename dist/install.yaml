apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: prometheusrulesyncs.mimir-rules-sync.creativecoding.it
spec:
  group: mimir-rules-sync.creativecoding.it
  names:
    kind: PrometheusRuleSync
    listKind: PrometheusRuleSyncList
    plural: prometheusrulesyncs
    singular: prometheusrulesync
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PrometheusRuleSync is the Schema for the prometheusrulesyncs
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PrometheusRuleSyncSpec defines the desired state of PrometheusRuleSync.
            properties:
              groups:
                items:
                  description: RuleGroup is a list of sequentially evaluated recording
                    and alerting rules.
                  properties:
                    interval:
                      description: Interval determines how often rules in the group
                        are evaluated.
                      pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                      type: string
                    name:
                      description: Name of the rule group.
                      minLength: 1
                      type: string
                    rules:
                      description: List of alerting and recording rules.
                      items:
                        description: Rule describes an alerting or recording rule
                        properties:
                          alert:
                            description: |-
                              Name of the alert. Must be a valid label value.
                              Only one of `record` and `alert` must be set.
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations to add to each alert.
                              Only valid for alerting rules.
                            type: object
                          expr:
                            description: PromQL expression to evaluate.
                            type: string
                          for:
                            description: Alerts are considered firing once they have
                              been returned for this long.
                            pattern: ^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels to add or overwrite.
                            type: object
                          record:
                            description: |-
                              Name of the time series to output to. Must be a valid metric name.
                              Only one of `record` and `alert` must be set.
                            type: string
                        required:
                        - expr
                        type: object
                      type: array
                  required:
                  - name
                  - rules
                  type: object
                type: array
            type: object
          status:
            description: PrometheusRuleSyncStatus defines the observed state of PrometheusRuleSync.
            properties:
              mimirNamespace:
                type: string
              mimirTenant:
                type: string
              ruleGroups:
                items:
                  properties:
                    error:
                      type: string
                    lastSyncTime:
                      format: date-time
                      type: string
                    name:
                      type: string
                    synchronized:
                      type: boolean
                  required:
                  - lastSyncTime
                  - name
                  - synchronized
                  type: object
                type: array
            required:
            - mimirNamespace
            - ruleGroups
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mimir-rules-sync
  name: mimir-rules-sync-controller-manager
  namespace: mimir-rules-sync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mimir-rules-sync
  name: mimir-rules-sync-leader-election-role
  namespace: mimir-rules-sync-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mimir-rules-sync-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - mimir-rules-sync.creativecoding.it
  resources:
  - prometheusrulesyncs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mimir-rules-sync.creativecoding.it
  resources:
  - prometheusrulesyncs/finalizers
  verbs:
  - update
- apiGroups:
  - mimir-rules-sync.creativecoding.it
  resources:
  - prometheusrulesyncs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheusrules
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheusrules/finalizers
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mimir-rules-sync
  name: mimir-rules-sync-leader-election-rolebinding
  namespace: mimir-rules-sync-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mimir-rules-sync-leader-election-role
subjects:
- kind: ServiceAccount
  name: mimir-rules-sync-controller-manager
  namespace: mimir-rules-sync-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: mimir-rules-sync
  name: mimir-rules-sync-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mimir-rules-sync-manager-role
subjects:
- kind: ServiceAccount
  name: mimir-rules-sync-controller-manager
  namespace: mimir-rules-sync-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mimir-rules-sync
  name: mimir-rules-sync-metrics-service
  namespace: mimir-rules-sync-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: mimir-rules-sync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: mimir-rules-sync
  name: mimir-rules-sync-manager
  namespace: mimir-rules-sync-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-rules-sync
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: mimir-rules-sync
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: gtriggiano/mimir-rules-sync:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: mimir-rules-sync-controller-manager
      terminationGracePeriodSeconds: 10
